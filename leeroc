import matplotlib.pyplot as plt
import numpy as np
import cmath


#Special Thanks to https://blog.christianperone.com/2010/02/riemann-zeta-function-visualizations-with-python/#comment-287722


"""
Factorials of a complex kind

C(n)!=(1+2i)(2+3i)(3+4i)(4+5i)(5+6i)(6+7i)...

C(2)!=(1+2i)(2+3i)
C(3)!=(1+2i)(2+3i)(3+4i)

Consider C(n)! as a net if want to catch all the 
numbers we leave it as is but if we want to catch the numbers
that say dont have have a product of 2 we do the following: 

C(n)!/2=(1/2+i)(1+3/2i)(3/2+2i)... 
represents all non-even by
reducing its value by half  

Now we divide
C(n)!=(1+2i)(2+3i)(3+4i)(4+5i)(5+6i)(6+7i)..
divided by the product of (1+2i)(2+3i) or(-4+7) 
"""

def Cfactdivforma(itr):
    formula=1
    lst=[]
    lst2=[]
    for x in range(1,itr+1):
        c = complex(x,x+1)
        lst.append(c/complex(-4,7))
        formula*=c/complex(-4,7)
        lst2.append(formula)
    
    return lst,lst2,formula

def Cfactdivform(itr):
    formula=1
    lst=[]
    lst2=[]
    for x in range(1,itr+1):
        c = complex(x,x+1)
        lst.append(c)
        formula*=c
        lst2.append(formula)
    return lst,lst2,formula

def Cfactdiv2(itr):
    formula=1
    lst=[]
    lst2=[]
    for x in range(1,itr+1):
        c = complex(x/2,(x+1)/2)
        lst.append(c)
        formula*=c
        lst2.append(formula)
    return lst,lst2,formula

itr=100

print("-------------------------")

lst,lst2,formula=Cfactdiv2(itr)
print("Magnitude: ",abs(formula))
abslst=[]
rads=[]
theta=[]

for x in lst:
    r,t = cmath.polar(x)
    abslst.append(abs(x))
    rads.append(abs(r))
    theta.append(abs(t))   

plt.polar(rads, theta, 'g.')
print(rads)
plt.axes(projection = 'polar')
plt.show()

for x in lst2:
    r,t = cmath.polar(x)
    abslst.append(abs(x))
    rads.append(abs(r))
    theta.append(abs(t))   

plt.polar(rads, theta, 'g.')
print(rads)
plt.axes(projection = 'polar')
plt.show()

#----------------------------------------
arr = np.array(lst2)
x = arr.real
# extract imaginary part using numpy array
y = arr.imag
  
# plot the complex numbers
plt.plot(x, y, 'g*')
plt.ylabel('Imaginary')
plt.xlabel('Real')
plt.show()
    
#---------------------------------
lst,lst2,formula=Cfactdivform(itr)
print("Magnitude: ",abs(formula))
print("Formula: ",formula)
abslst=[]
rads=[]
theta=[]
print("Trial")
plt.axes(projection = 'polar')
print(lst2)

for x in lst:
    r,t = cmath.polar(x)
    abslst.append(abs(x))
    rads.append(abs(r))
    theta.append(abs(t))    
    plt.polar(x, r, 'g.')  
    
plt.show()

#----------------------------------------
arr = np.array(lst2)
x = arr.real
y = arr.imag
  
plt.plot(x, y, 'g*')
plt.ylabel('Imaginary')
plt.xlabel('Real')
plt.show()
    
#--------------------------------------------------------------------------
lst,lst2,formula=Cfactdivforma(itr)
"""
C(n)!=(1+2i)(2+3i)(3+4i)(4+5i)(5+6i)(6+7i)..
divided by the product of (1+2i)(2+3i) or -4+7i
"""

plt.axes(projection = 'polar')
print(lst2)

for x in lst:
    r,t = cmath.polar(x)
    abslst.append(abs(x))
    rads.append(abs(r))
    theta.append(abs(t))    
    plt.polar(x, r, 'g.')  
    
plt.show()

Product=formula/(complex(-4,7))
print("C(n)!/C(2)!: ", )
print("Magnitude of z: ", abs(Product))

abslst=[]
rads=[]
theta=[]

for x in lst2:
    r,t = cmath.polar(x)
    abslst.append(abs(x))
    rads.append(abs(r))
    theta.append(abs(t))   

plt.polar(rads, theta, 'g.')
     
plt.axes(projection = 'polar')
plt.show()
